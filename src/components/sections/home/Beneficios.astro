---
import BeneficiosPc from "../home/beneficios/BeneficiosPc.astro";
import BeneficiosMobile from "../home/beneficios/BeneficiosMobile.astro";

import "../../../styles/flip-cards.css";
---

<section id="beneficios" class="mb-20">
  <BeneficiosPc />
  <BeneficiosMobile />
</section>

<!-- Interacción y animación -->
<script>
  // Lógica para interacción en móvil y desktop
  document.querySelectorAll(".group").forEach((card: Element) => {
    const cardElement = card as HTMLElement;
    let touchTimeout: number;
    let isScrolling = false;

    const HOLD_DURATION = 75;

    if (window.innerWidth <= 767) {
      cardElement.addEventListener(
        "touchstart",
        (e: TouchEvent) => {
          isScrolling = false;

          touchTimeout = window.setTimeout(() => {
            if (!isScrolling) {
              // Cerrar todas las demás tarjetas
              document.querySelectorAll(".group").forEach((otherCard) => {
                const otherCardElement = otherCard as HTMLElement;
                if (otherCardElement !== cardElement) {
                  otherCardElement.classList.remove("flipped");
                  const otherFlipContainer = otherCardElement.querySelector(
                    ".flip-container",
                  ) as HTMLElement | null;
                  if (otherFlipContainer) {
                    otherFlipContainer.style.transform = "rotateY(0deg)";
                  }
                }
              });

              // Toggle la tarjeta actual
              cardElement.classList.toggle("flipped");
              const flipContainer = cardElement.querySelector(
                ".flip-container",
              ) as HTMLElement | null;
              if (flipContainer) {
                flipContainer.style.transform = cardElement.classList.contains(
                  "flipped",
                )
                  ? "rotateY(180deg)"
                  : "rotateY(0deg)";
              }
            }
          }, HOLD_DURATION);
        },
        { passive: true },
      );

      cardElement.addEventListener("touchmove", () => {
        isScrolling = true;
        clearTimeout(touchTimeout);
      });

      cardElement.addEventListener("touchend", () => {
        clearTimeout(touchTimeout);
      });
    } else {
      cardElement.addEventListener("mouseenter", () => {
        cardElement.classList.add("flipped");
        const flipContainer = cardElement.querySelector(
          ".flip-container",
        ) as HTMLElement | null;
        if (flipContainer) {
          flipContainer.style.transform = "rotateY(180deg)";
        }
      });

      cardElement.addEventListener("mouseleave", () => {
        cardElement.classList.remove("flipped");
        const flipContainer = cardElement.querySelector(
          ".flip-container",
        ) as HTMLElement | null;
        if (flipContainer) {
          flipContainer.style.transform = "rotateY(0deg)";
        }
      });
    }

    // Interacción con teclado
    cardElement.addEventListener("keydown", (e: KeyboardEvent) => {
      if (e.key === "Enter" || e.key === " ") {
        e.preventDefault();
        // Cerrar otras tarjetas también en teclado
        document.querySelectorAll(".group").forEach((otherCard) => {
          const otherCardElement = otherCard as HTMLElement;
          if (otherCardElement !== cardElement) {
            otherCardElement.classList.remove("flipped");
            const otherFlipContainer = otherCardElement.querySelector(
              ".flip-container",
            ) as HTMLElement | null;
            if (otherFlipContainer) {
              otherFlipContainer.style.transform = "rotateY(0deg)";
            }
          }
        });

        cardElement.classList.toggle("flipped");
        const flipContainer = cardElement.querySelector(
          ".flip-container",
        ) as HTMLElement | null;
        if (flipContainer) {
          flipContainer.style.transform = cardElement.classList.contains(
            "flipped",
          )
            ? "rotateY(180deg)"
            : "rotateY(0deg)";
        }
      }
    });

    // Accesibilidad
    cardElement.setAttribute("role", "button");
    cardElement.setAttribute("tabindex", "0");
    const flipContainer = cardElement.querySelector(
      ".flip-container",
    ) as HTMLElement | null;
    if (flipContainer) {
      flipContainer.setAttribute("aria-label", "Tarjeta interactiva");
    }
  });

  // Animación automática al aparecer
  const observer = new IntersectionObserver(
    (entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry: IntersectionObserverEntry) => {
        if (entry.isIntersecting) {
          const target = entry.target as HTMLElement;
          const flipCards = target.querySelectorAll(".group");
          flipCards.forEach((card: Element) => {
            const cardElement = card as HTMLElement;
            const flipContainer = cardElement.querySelector(
              ".flip-container",
            ) as HTMLElement | null;
            if (flipContainer) {
              flipContainer.classList.add(
                "vertical-flip",
                "animate-auto-flip-vertical",
              );

              flipContainer.addEventListener(
                "animationend",
                () => {
                  flipContainer.classList.remove(
                    "vertical-flip",
                    "animate-auto-flip-vertical",
                  );
                },
                { once: true },
              );
            }
          });
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.5 },
  );

  document
    .querySelectorAll("section.hidden.md\\:block, section.block.md\\:hidden")
    .forEach((section: Element) => {
      observer.observe(section as HTMLElement);
    });
</script>
