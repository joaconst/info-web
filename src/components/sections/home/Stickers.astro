<section id="anim-section" class="relative w-screen min-h-[50vh] bg-[#5A86FF] mt-32 flex items-center justify-center px-4">
  <div class="animated-rectangle w-full max-w-[440px] h-[60px] bg-white border-4 border-[#d9d9d9] rounded-[50px] shadow-[8px_8px_0_0_#d9d9d9] relative overflow-hidden cursor-pointer transition-all duration-300 ease-in-out" data-text="Con tu web alcanzaras a todo el mundo">
    <span class="cursor absolute right-2 top-1/2 transform -translate-y-1/2 w-[2px] h-6 bg-black opacity-0"></span>
  </div>
</section>

<style>
  /* Estado animado, se activa agregando la clase "animate" */
  .animated-rectangle.animate {
    transform: translate(-2px, -2px);
    box-shadow: 10px 10px 0 #000;
  }

  /* Pseudo-elemento para el texto */
  .animated-rectangle::before {
    content: attr(data-text);
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    font-family: 'Courier New', monospace;
    font-size: 18px;
    color: #000;
    width: 0;
    overflow: hidden;
    white-space: nowrap;
  }

  /* Pseudo-elemento para el efecto overlay */
  .animated-rectangle::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    transform: translateX(-100%);
  }

  /* Animaciones al estado animado */
  .animated-rectangle.animate::before {
    animation: typing 2s steps(30, end) forwards;
  }

  .animated-rectangle.animate::after {
    animation: slide 1.5s ease-in-out forwards;
  }

  .animated-rectangle.animate .cursor {
    opacity: 1;
  }

  @keyframes typing {
    from { width: 0; }
    to { width: calc(100% - 24px); }
  }

  @keyframes slide {
    to { transform: translateX(100%); }
  }

  @keyframes blink {
    50% { opacity: 0; }
  }

  /* Animación del cursor */
  .cursor {
    animation: blink 1.5s step-end infinite;
  }

  /* Ajustes responsive para dispositivos pequeños */
  @media (max-width: 640px) {
    .animated-rectangle {
      height: 50px;
    }
    .animated-rectangle::before {
      font-size: 16px;
      left: 10px;
    }
    .cursor {
      height: 20px;
      right: 8px;
    }
  }
</style>

<script>
  // Usamos IntersectionObserver para activar la animación cuando la sección esté en vista
  const section = document.getElementById('anim-section');
  const animatedRect = section.querySelector('.animated-rectangle');

  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      if(entry.isIntersecting) {
        animatedRect.classList.add('animate');
        observer.unobserve(entry.target); // Se desactiva el observador para que la animación no se repita
      }
    });
  }, { threshold: 0.5 });

  observer.observe(section);
</script>
