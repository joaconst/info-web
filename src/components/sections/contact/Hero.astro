---

---

<section id="inicio" class="relative w-full min-h-screen overflow-hidden">
  <!-- Sección de imagen -->
  <div class="relative w-full h-[50vh] md:h-[70vh]">
    <picture class="absolute inset-0 z-0">
      <img
        src="contact/hero.webp"
        alt="Equipo de diseño web trabajando"
        class="w-full h-full object-cover object-center"
        loading="eager"
      />
    </picture>

    <!-- Título -->
    <article class="absolute inset-0 flex items-center justify-center z-20 text-white">
      <div class="w-full max-w-screen-xl px-6 md:px-4">
        <h2 class="text-2xl md:text-7xl font-bold text-center animate-slide-in-left">
          Ponte en contacto con nosotros
        </h2>
      </div>
    </article>
  </div>

  <!-- Espacio para contenido adicional solo en desktop -->
  <div class="hidden md:block h-[30vh]"></div>
</section>

<style>
  @keyframes slide-in-left {
    0% { transform: translateX(-100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
  }

  .animate-slide-in-left {
    animation: slide-in-left 1s ease-out forwards;
  }

  @media (max-width: 768px) {
    #inicio {
      display: flex;
      flex-direction: column;
    }
    
    #inicio .relative.w-full {
      height: 50vh; /* Altura reducida para mobile */
    }
    
    #inicio .mt-8 {
      margin-top: 2rem;
      padding: 0 1rem;
      position: relative;
      bottom: auto;
      left: auto;
      transform: none;
    }
    
    #inicio h2 {
      font-size: 2.5rem; /* Tamaño de texto ajustado para mobile */
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
  const section = document.getElementById('inicio');
  const cards = document.querySelectorAll('.animate-slide-in-left');

  if (section && cards) {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          cards.forEach(card => {
            if (card instanceof HTMLElement) {
              card.style.animationPlayState = 'running';
            }
          });
        }
      });
    }, { threshold: 0.1 });

    observer.observe(section);
  }
});
</script>